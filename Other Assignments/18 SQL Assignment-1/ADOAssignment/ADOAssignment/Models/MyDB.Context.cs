//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ADOAssignment.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DotNetAssignmentsEntities : DbContext
    {
        public DotNetAssignmentsEntities()
            : base("name=DotNetAssignmentsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ProductDetail> ProductDetails { get; set; }
        public virtual DbSet<SupplierInfo> SupplierInfoes { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
    
        public virtual ObjectResult<GetCustomerById_Result> GetCustomerById(Nullable<int> custId)
        {
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerById_Result>("GetCustomerById", custIdParameter);
        }
    
        public virtual int InsertCustomer(Nullable<int> custid, string custname, string custAddress, Nullable<System.DateTime> dob, Nullable<decimal> salary)
        {
            var custidParameter = custid.HasValue ?
                new ObjectParameter("Custid", custid) :
                new ObjectParameter("Custid", typeof(int));
    
            var custnameParameter = custname != null ?
                new ObjectParameter("Custname", custname) :
                new ObjectParameter("Custname", typeof(string));
    
            var custAddressParameter = custAddress != null ?
                new ObjectParameter("CustAddress", custAddress) :
                new ObjectParameter("CustAddress", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("Dob", dob) :
                new ObjectParameter("Dob", typeof(System.DateTime));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCustomer", custidParameter, custnameParameter, custAddressParameter, dobParameter, salaryParameter);
        }
    }
}
